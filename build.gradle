plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'

    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.9.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.0'
}

version = project.evo_plus_version
group = project.maven_group
archivesBaseName = project.archives_base_name

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url 'https://gitlab.diamondworld.pro/api/v4/projects/104/packages/maven' }
    maven { url 'https://jitpack.io' }
    dependencies {
        compileOnly(annotationProcessor('org.projectlombok:lombok:1.18.24'))
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    // Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    include(modImplementation(fabricApi.module("fabric-message-api-v1", project.fabric_version)))

    //Kotlin
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    include(implementation("com.github.ben-manes.caffeine:caffeine:${project.caffeine_version}"))

    include(implementation("pro.diamondworld.evoplusprotocol:evoplusprotocol:${project.evo_plus_protocol_version}"))
    include(implementation("com.github.asyncdargen:rest-client:${project.rest_client_version}"))
    include(implementation("com.github.asyncdargen.crowbar:crowbar-core:${project.crowbar_version}"))
}

processResources {
    inputs.property 'version', version
    filteringCharset 'UTF-8'

    filesMatching('fabric.mod.json') {
        expand project.properties
        expand 'version': version
    }
}

runClient {
    jvmArgs '-Devo-plus.dev=true'
    args "--username=${System.getenv('TEST_NAME')}"
}

jar {
    from('LICENSE')
}

allOpen {
    annotation('ru.dargen.evoplus.util.kotlin.KotlinOpens')
}

tasks.withType(JavaCompile)*.options*.encoding = 'UTF-8'
